var db = 'telegraf'

var rp = 'autogen'

var measurement = 'mysql'

var groupBy = ['server']

var whereFilter = lambda: ("server" == 'rm-uf679e820jx04jnvxvo.mysql.rds.aliyuncs.com:3306')

var name = 'RDS For MySQL存在大量失败连接'

var idVar = name + '-{{.Group}}'

var message = 'RDS For MySQL存在大量失败连接
- 问题描述: 
> 存在超过10%的失败连接，代表有大量与数据库的中断连接。 
造成这种情况的一个常见原因是，由于连接超时到达，应用程序或锁定的表之间的连接被不正确地关闭，导致随后的连接中断。
- 优化建议: 
> 建议您对代码进行审核，以便正确关闭连接，您可以选择一个临时环境进行测试，以确定问题所在。'

var idTag = 'alertID'

var levelTag = 'level'

var messageField = 'message'

var durationField = 'duration'

var outputDB = 'chronograf'

var outputRP = 'autogen'

var outputMeasurement = 'alerts'

var triggerType = 'threshold'

var crit = 0


var a_data = stream
    |from()
        .database(db)
        .retentionPolicy(rp)
        .measurement(measurement)
        .groupBy(groupBy)
        .where(whereFilter)
    |eval()
        .keep('aborted_connects')
    |window()
        .period(10s)
        .every(5s)
        
var b_data = stream
    |from()
        .database(db)
        .retentionPolicy(rp)
        .measurement(measurement)
        .groupBy(groupBy)
        .where(whereFilter)
    |eval()
        .keep('connections')
    |window()
        .period(10s)
        .every(5s)

var data = a_data
	|join(b_data)
      	.as('a','b')
    |eval(lambda: "a.aborted_connects" / "b.connections" * 100)
    	.as('value')

var trigger = data
    |alert()
        .crit(lambda: "value" > crit)
        .stateChangesOnly()
        .message(message)
        .id(idVar)
        .idTag(idTag)
        .levelTag(levelTag)
        .messageField(messageField)
        .durationField(durationField)
        .victorOps()

trigger
    |eval(lambda: float("value"))
        .as('value')
        .keep()
    |influxDBOut()
        .create()
        .database(outputDB)
        .retentionPolicy(outputRP)
        .measurement(outputMeasurement)
        .tag('alertName', name)
        .tag('triggerType', triggerType)

trigger
    |httpOut('output')

